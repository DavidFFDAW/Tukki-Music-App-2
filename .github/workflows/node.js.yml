# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Write file with private key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ../key.pem
    - name: Change permissions to key.pem
      run: chmod 400 ../key.pem
    - name: Check current directory content
      run: ls -a

    - name: Move the env file out the api folder
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "mv /var/www/html/tukki/api/.env /var/www/html/.env.tukki"
    - name: Removing folder and cloning the repository to /tukki
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "rm -rf /var/www/html/tukki && cd /var/www/html && git clone https://github.com/DavidFFDAW/Tukki-Music-App-2.git tukki"
    - name: Removing .git inside /tukki
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "cd /var/www/html/tukki && rm -rf .git"
    - name: Moving back .env file to api folder before dockerization
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "mv /var/www/html/.env.tukki /var/www/html/tukki/api/.env"
    - name: Executing dockerization script to make things easier
      run: ssh -o StrictHostKeyChecking=no -i ../key.pem root@${{ secrets.SSH_HOST }} "cd /var/www/html/tukki/ && sh dockerize.sh"


